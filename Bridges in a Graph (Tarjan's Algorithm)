vvi adj;
int t;
vi mnt, tim, vis;
vector<pii> bridges;

void dfs(int x, int p) {
    tim[x] = t++;
    mnt[x] = tim[x];
    vis[x] = 1;
    for(auto i:adj[x]) {
        if(i == p) continue;
        if(!vis[i]) dfs(i, x);
        mnt[x] = min(mnt[i], mnt[x]);
        if(mnt[i] > tim[x]) {
            bridges.pb({x, i});
        }
    }
}

void CoderAbhi27(){
    int n, m;
    cin>>n>>m;
    adj.assign(n+1, vi(0));
    rep(i,0,m) {
        int u, v; cin>>u>>v;
        adj[u].pb(v);
        adj[v].pb(u);
    }
    mnt.assign(n+1, -1);
    tim.assign(n+1, -1);
    vis.assign(n+1, 0);
    t=0;
    bridges.clear();
    dfs(1, -1);
}

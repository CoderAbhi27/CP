vvi adj, adj1, adj2;
vi vis, label;
stack<int> st;
int k;

void dfs(int i){
    vis[i]=1;
    for(auto j:adj[i]){
        if(!vis[j]) dfs(j);
    }
    st.push(i);
}

void dfs1(int i){
    vis[i]=1;
    for(auto j:adj1[i]){
        if(!vis[j]) dfs1(j);
    }
    label[i]=k;
}

void solve(){
    int n,m;
    cin>>n>>m;
    adj.assign(n+1, vi(0));
    adj1.assign(n+1, vi(0));
    while(m--){
        int a,b; cin>>a>>b;
        adj[a].pb(b);
        adj1[b].pb(a);
    }

    vis.assign(n+1,0);
    rep(i,1,n+1) if(!vis[i]) dfs(i);

    vis.assign(n+1,0);
    label.assign(n+1,0);
    k=1;
    while(!st.empty()){
        int x=st.top();
        st.pop();
        if(vis[x]) continue;
        dfs1(x);
        k++;
    }

    adj2.assign(k,vi(0));
    rep(i,1,n+1){
        for(auto j:adj[i]){
            if(label[i]!=label[j]) adj2[label[i]].pb(label[j]);
        }
    }

}

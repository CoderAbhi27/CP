vector<vector<int>> mat_mult(const vector<vector<int>> &A, const vector<vector<int>> &B) {
    int n = A.size();
    vector<vector<int>> C(n, vector<int>(n, 0));
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            for (int k = 0; k < n; k++)
                C[i][j] = (C[i][j] + A[i][k] * B[k][j]) % MOD;
    return C;
}
vector<vector<int>> mat_expo(vector<vector<int>> A, int exp) {
    int n = A.size();
    vector<vector<int>> res(n, vector<int>(n, 0));
    for (int i = 0; i < n; i++) res[i][i] = 1;
    while (exp) {
        if (exp & 1) res = mat_mult(res, A);
        A = mat_mult(A, A);
        exp >>= 1;
    }
    return res;
}

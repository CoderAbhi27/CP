int n;
vi dist, parent;
vector<vector<pii>> adj;

void dij(int s)
{
    parent.assign(n+1, -1);
    dist.assign(n+1, INT64_MAX);
    dist[s] = 0;
    set< pair<int,int> > st;
    vector<bool> vis(n+1,0);
    st.insert({dist[s], s});

    while(!st.empty()){
        int u = st.begin()->second;
        st.erase(st.begin());
        if(vis[u]) continue;
        vis[u] = 1;
        for(auto p: adj[u]){
            int v = p.first;
            int w = p.second;
            if(!vis[v] && dist[u] + w < dist[v])
            {
                dist[v] = dist[u] + w;
                parent[v] = u;
                st.insert({dist[v], v});
            }
        }
    }
}


void solve(){
    int m;
    cin>>n>>m;
    adj.assign(n+1,vpii(0));
    while(m--){
        int a,b,c;
        cin>>a>>b>>c;
        adj[a].pb({b,c});
    }
    dij(1);
    rep(i,1,n+1) cout<<dist[i]<<' ';

}
